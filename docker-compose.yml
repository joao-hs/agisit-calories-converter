version: '3.9'

services:
  db:
    image: postgres:14
    container_name: postgres-db
    restart: always
    environment: 
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d
  
  storage_device:
    build: ./services/storage
    container_name: storage-device
    restart: always
    ports:
      - "5000:5000"
    environment:
      DB_URL: postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
    depends_on:
      - db

  be_carbs:
    build:
      context: ./services/backend
      dockerfile: Dockerfile
      args:
        - MICROSERVICE=carbs
    container_name: be-carbs
    restart: always
    ports:
      - "8000:80"
    environment:
      STORAGE_DEVICE_URL: http://storage_device:5000
    depends_on:
      - storage_device
  
  be_dairy:
    build:
      context: ./services/backend
      dockerfile: Dockerfile
      args:
        - MICROSERVICE=dairy
    container_name: be-dairy
    restart: always
    ports:
      - "8001:80"
    environment:
      STORAGE_DEVICE_URL: http://storage_device:5000
    depends_on:
      - storage_device

  be_meats:
    build:
      context: ./services/backend
      dockerfile: Dockerfile
      args:
        - MICROSERVICE=meats
    container_name: be-meats
    restart: always
    ports:
      - "8002:80"
    environment:
      STORAGE_DEVICE_URL: http://storage_device:5000
    depends_on:
      - storage_device
  
  be_vegetables:
    build:
      context: ./services/backend
      dockerfile: Dockerfile
      args:
        - MICROSERVICE=vegetables
    container_name: be-vegetables
    restart: always
    ports:
      - "8003:80"
    environment:
      STORAGE_DEVICE_URL: http://storage_device:5000
    depends_on:
      - storage_device

volumes:
  db-data: